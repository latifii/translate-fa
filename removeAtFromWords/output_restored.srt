1
00:00:00,000 --> 00:00:02,291
‫[ماکسیمیلیان شوارتزمولر] پس ما قادریم

2
00:00:02,291 --> 00:00:04,260
‫برای دریافت پست های ما در اینجا

3
00:00:04,260 --> 00:00:06,060
‫اما البته در واقعیت

4
00:00:06,060 --> 00:00:09,690
‫این همیشه قرار نیست فوق العاده سریع باشد.

5
00:00:09,690 --> 00:00:12,360
‫ممکن است لازم باشد منتظر باطن خود باشیم

6
00:00:12,360 --> 00:00:15,000
‫برای چند میلی ثانیه یا ثانیه

7
00:00:15,000 --> 00:00:16,770
‫و بنابراین ممکن است بخواهیم نشان دهیم

8
00:00:16,770 --> 00:00:19,710
‫چند متن در حال بارگذاری مجدد

9
00:00:19,710 --> 00:00:22,500
‫در حالی که ما منتظر پاسخ هستیم

10
00:00:22,500 --> 00:00:25,290
‫و البته ممکن است همه چیز به اشتباه پیش برود.

11
00:00:25,290 --> 00:00:28,743
‫و من می خواهم handle این دو سناریو را نیز، بنابراین.

12
00:00:29,760 --> 00:00:32,340
‫حالا بیایید با بارگیری state شروع کنیم.

13
00:00:32,340 --> 00:00:33,360
‫برای handle که،

14
00:00:33,360 --> 00:00:36,483
‫می توانیم یک state جدید به آن component اضافه کنیم،

15
00:00:37,320 --> 00:00:40,830
‫یک state جدید با کمک useState hook البته،

16
00:00:40,830 --> 00:00:43,491
‫که isFetching ما state است،

17
00:00:43,491 --> 00:00:45,663
‫که با setIsFetching به روز می کنیم.

18
00:00:48,030 --> 00:00:50,043
‫و در ابتدا باید false باشد،

19
00:00:51,390 --> 00:00:54,960
‫اما البته اینجا در داخل fetchPosts

20
00:00:54,960 --> 00:00:56,730
‫در آن effect function،

21
00:00:56,730 --> 00:00:59,860
‫درست در ابتدا، می خواهیم setIsFetching را فراخوانی کنیم

22
00:01:01,290 --> 00:01:02,940
‫و آن را روی true قرار دهید

23
00:01:02,940 --> 00:01:04,940
‫زیرا ما آن درخواست را اینجا ارسال می کنیم.

24
00:01:06,450 --> 00:01:09,430
‫البته، ما همچنین می خواهیم setIsFetching را انجام دهیم

25
00:01:10,470 --> 00:01:13,443
‫پس از پایان کار به false برگردیم.

26
00:01:16,050 --> 00:01:18,902
‫و سپس با فراخوانی setIsFetching

27
00:01:18,902 --> 00:01:21,630
‫و روی true یا false تنظیم می‌شود،

28
00:01:21,630 --> 00:01:23,910
‫ما می توانیم به component function برویم

29
00:01:23,910 --> 00:01:28,910
‫و اگر در حال واکشی محتوا هستیم value را تغییر دهید.

30
00:01:29,340 --> 00:01:34,340
‫بنابراین ما می توانیم بررسی کنیم که آیا isFetching true است،

31
00:01:34,620 --> 00:01:39,270
‫و در آن صورت محتوا را برابر با یک پاراگراف قرار دهید

32
00:01:39,270 --> 00:01:42,600
‫با یک id برای بارگذاری مجدد خط تیره

33
00:01:42,600 --> 00:01:45,843
‫چون چند استایل برای آن id آماده کردم.

34
00:01:46,890 --> 00:01:50,763
‫و در اینجا می توانیم بگوییم fetchingPosts dot، dot dot.

35
00:01:53,730 --> 00:01:57,900
‫و اگر به صفحه خود برگردیم می توانیم این را در action ببینیم

36
00:01:57,900 --> 00:02:01,050
‫و ابزارهای توسعه دهنده را باز کنید.

37
00:02:01,050 --> 00:02:04,323
‫و سپس آنجا، اگر به برگه شبکه بروید،

38
00:02:05,430 --> 00:02:08,910
‫زیرا در کروم می توانید شبکه را کنترل کنید

39
00:02:08,910 --> 00:02:11,163
‫و شبکه کندتر را شبیه سازی کنید.

40
00:02:12,300 --> 00:02:15,333
‫مثلا با شبیه سازی 3G کند.

41
00:02:16,770 --> 00:02:19,320
‫اگر این کار را انجام دهید و سپس دوباره بارگیری کنید،

42
00:02:19,320 --> 00:02:21,826
‫واکشی آن data مدتی طول می کشد

43
00:02:21,826 --> 00:02:24,990
‫زیرا در طول توسعه همه این فایل های کد

44
00:02:24,990 --> 00:02:27,810
‫بسیار بزرگ هستند و بهینه نیستند.

45
00:02:27,810 --> 00:02:31,420
‫اما پس از آن شما حداقل به طور خلاصه آن متن پست واکشی را خواهید دید

46
00:02:32,910 --> 00:02:36,363
‫و با آن، throttling را غیرفعال خواهم کرد.

47
00:02:37,890 --> 00:02:42,420
‫اما این متن بارگیری بنابراین همانطور که در نظر گرفته شده نشان داده می شود.

48
00:02:42,420 --> 00:02:45,000
‫حال برای نتیجه گیری این مثال،

49
00:02:45,000 --> 00:02:48,300
‫من همچنین می خواهم مدیریت خطا را پیاده سازی کنم

50
00:02:48,300 --> 00:02:50,790
‫به طوری که اگر ارسال این درخواست ناموفق بود،

51
00:02:50,790 --> 00:02:52,680
‫برنامه به سادگی خراب نمی شود،

52
00:02:52,680 --> 00:02:56,073
‫اما ما در عوض پیام خطا را به کاربر نشان می دهیم.

53
00:02:57,570 --> 00:03:00,450
‫اکنون از آنجایی که ما از این ابزار function استفاده می کنیم،

54
00:03:00,450 --> 00:03:05,220
‫که اگر پاسخ خطا را دریافت کنیم، خطا ایجاد می کند،

55
00:03:05,220 --> 00:03:09,690
‫تنها کاری که باید انجام دهیم این است که این تماس را در اینجا بپیچیم

56
00:03:09,690 --> 00:03:11,913
‫در یک بلوک تلاش برای گرفتن،

57
00:03:14,730 --> 00:03:17,253
‫مانند این که در آن خطا می گیریم.

58
00:03:18,930 --> 00:03:20,867
‫البته کد بستگی دارد

59
00:03:20,867 --> 00:03:24,090
‫در مورد موفقیت این درخواست واکشی

60
00:03:24,090 --> 00:03:28,110
‫هر چند اکنون باید به بلوک سه بروید.

61
00:03:28,110 --> 00:03:31,230
‫بنابراین اینجا جایی که پست های واکشی شده را به روز می کنیم

62
00:03:31,230 --> 00:03:33,063
‫آن نیز باید در آنجا برود.

63
00:03:34,620 --> 00:03:38,460
‫این کد در اینجا که در آن isFetching back را به false تنظیم کردیم،

64
00:03:38,460 --> 00:03:42,000
‫با این حال، باید خارج از بلوک try-catch باقی بماند

65
00:03:42,000 --> 00:03:45,120
‫زیرا مهم نیست که خطا داریم یا نه،

66
00:03:45,120 --> 00:03:47,130
‫ما دیگر نمی آوریم

67
00:03:47,130 --> 00:03:50,403
‫بنابراین قطعاً باید دوباره روی false تنظیم شود.

68
00:03:52,650 --> 00:03:54,600
‫و اکنون اینجا در بلوک گرفتن است

69
00:03:54,600 --> 00:03:56,793
‫جایی که خطا باید رسیدگی شود

70
00:03:58,200 --> 00:04:03,200
‫برای این کار می‌توانیم یک state، یک خطای state اضافه کنیم،

71
00:04:05,190 --> 00:04:10,190
‫که نام آن را error و setError state به روز رسانی function را می گذارم.

72
00:04:12,570 --> 00:04:16,800
‫و این باید در نهایت یک string یا undefined باشد،

73
00:04:16,800 --> 00:04:18,483
‫که value اولیه است.

74
00:04:21,570 --> 00:04:24,180
‫و سپس اینجا در بلوک گرفتن،

75
00:04:24,180 --> 00:04:28,750
‫می‌توانیم این خطای state را با فراخوانی set error تنظیم کنیم

76
00:04:29,940 --> 00:04:34,830
‫و می‌توانیم آن را روی پیامی مانند عدم واکشی پست‌ها تنظیم کنیم

77
00:04:34,830 --> 00:04:35,663
‫مثل این.

78
00:04:38,400 --> 00:04:40,350
‫ما همچنین می توانیم از پیام استفاده کنیم

79
00:04:40,350 --> 00:04:42,630
‫از خطایی که پرتاب می شود

80
00:04:42,630 --> 00:04:45,000
‫بنابراین به عنوان مثال از این خطا

81
00:04:45,000 --> 00:04:47,913
‫جایی که پیام در واکشی data ناموفق بود.

82
00:04:48,900 --> 00:04:52,104
‫اکنون برای آن باید به این خطای object دسترسی پیدا کنیم

83
00:04:52,104 --> 00:04:54,660
‫که اینجا گرفتار شده است

84
00:04:54,660 --> 00:04:58,470
‫و از آن در خطای تنظیم شده state در تماس به روز رسانی استفاده کنید.

85
00:04:58,470 --> 00:05:01,323
‫و برای مثال این را روی error.message قرار دهید.

86
00:05:02,820 --> 00:05:06,270
‫مشکل با آن فقط آن خطا به طور پیش فرض است

87
00:05:06,270 --> 00:05:07,800
‫از نوع  ناشناخته است

88
00:05:07,800 --> 00:05:11,520
‫زیرا TypeScript نمی داند اینجا چه چیزی را می گیرد.

89
00:05:11,520 --> 00:05:15,720
‫در جاوا اسکریپت، شما می توانید هر چیزی را به عنوان یک خطا پرتاب کنید

90
00:05:15,720 --> 00:05:18,993
‫از جمله numbers، رشته ها، هر چیزی.

91
00:05:19,890 --> 00:05:21,630
‫بنابراین TypeScript نمی داند

92
00:05:21,630 --> 00:05:24,510
‫چه type از value در اینجا دریافت خواهد کرد

93
00:05:24,510 --> 00:05:27,930
‫و بنابراین ما باید چند چک را در اینجا اضافه کنیم

94
00:05:27,930 --> 00:05:32,610
‫و بررسی کنید که آیا خطا، مثلاً یک property خاص دارد یا خیر

95
00:05:32,610 --> 00:05:36,880
‫یا مثلاً اگر type خطا باشد

96
00:05:37,913 --> 00:05:40,110
‫string یا چیزی شبیه به این است.

97
00:05:40,110 --> 00:05:41,670
‫ما می توانیم همه این کارها را انجام

98
00:05:41,670 --> 00:05:43,620
‫دهیم، اما برای این برنامه در اینجا،

99
00:05:43,620 --> 00:05:47,370
‫می دانیم که یک خطای object خواهد بود.

100
00:05:47,370 --> 00:05:51,300
‫بنابراین می‌توانیم فقط از ارسال
‫type در اینجا استفاده

101
00:05:51,300 --> 00:05:55,143
‫کنیم و به TypeScript بگوییم
‫که این خطای type خواهد بود.

102
00:05:57,390 --> 00:06:00,960
‫از طرف دیگر، و کمی پاک‌تر، می‌توانیم

103
00:06:00,960 --> 00:06:04,320
‫یک علامت if اضافه کنیم و بررسی کنیم

104
00:06:04,320 --> 00:06:07,683
‫که آیا خطا نمونه‌ای از کلاس خطا است.

105
00:06:09,000 --> 00:06:12,040
‫این اپراتور دیگری است که در جاوا

106
00:06:12,040 --> 00:06:15,540
‫اسکریپت تعبیه شده است و اگر خطا بر اساس

107
00:06:15,540 --> 00:06:18,870
‫این کلاس خطا باشد می
‫توان از آن استفاده کرد.

108
00:06:18,870 --> 00:06:22,533
‫که در جاوا اسکریپت یا false تعبیه شده است.

109
00:06:23,970 --> 00:06:26,190
‫و این نیز به ما اجازه می دهد

110
00:06:26,190 --> 00:06:29,463
‫برای دسترسی به پیام property به روشی امن.

111
00:06:30,690 --> 00:06:32,580
‫و مسلماً این راه تمیزتر است.

112
00:06:32,580 --> 00:06:34,653
‫بنابراین من از این روش در اینجا استفاده خواهم کرد.

113
00:06:36,300 --> 00:06:39,570
‫با این کار، می توانیم از این خطای state استفاده کنیم

114
00:06:39,570 --> 00:06:43,503
‫تا در صورت داشتن خطایی پیغام خطا را روی صفحه نمایش دهیم.

115
00:06:44,940 --> 00:06:47,680
‫بنابراین ما می توانیم، برای مثال، اینجا را بررسی کنیم

116
00:06:48,744 --> 00:06:52,230
‫اگر خطا حقیقت دارد، زیرا به خاطر داشته باشید

117
00:06:52,230 --> 00:06:56,973
‫این خطا در ابتدا undefined است که نادرست است.

118
00:06:58,020 --> 00:06:59,995
‫بنابراین اگر یک string باشد اگر محتوایی داشته باشد،

119
00:06:59,995 --> 00:07:02,520
‫حقیقت خواهد بود

120
00:07:02,520 --> 00:07:05,850
‫و اگر اینطور است، محتوا باید برابر باشد

121
00:07:05,850 --> 00:07:09,300
‫به آن پیام خطای ویژه component،

122
00:07:09,300 --> 00:07:12,090
‫که قبلاً برای شما آماده کردم

123
00:07:12,090 --> 00:07:13,803
‫که یک متن prop میخواهد.

124
00:07:16,890 --> 00:07:20,433
‫بنابراین در اینجا می توانیم محتوا را برابر با ErrorMessage قرار دهیم.

125
00:07:22,320 --> 00:07:25,653
‫البته برای این کار باید import این component.

126
00:07:28,380 --> 00:07:33,380
‫و سپس در اینجا می توانیم متن prop را روی خطای اینگونه تنظیم کنیم.

127
00:07:36,630 --> 00:07:39,990
‫و با آن ما نیز باید خطاها را مدیریت کنیم.

128
00:07:39,990 --> 00:07:42,990
‫بنابراین اگر اکنون عمداً برنامه را با

129
00:07:42,990 --> 00:07:47,340
‫ارسال درخواست به نقطه پایانی که وجود

130
00:07:47,340 --> 00:07:49,530
‫ندارد خراب کنیم و سپس آن را ذخیره کنیم.

131
00:07:49,530 --> 00:07:53,673
‫اگر اینجا را دوباره بارگذاری
‫کنم، با این کادر خطا مواجه می شوم.

132
00:07:54,570 --> 00:07:56,700
‫بنابراین همانطور که در نظر
‫گرفته شده است کار می کند.

133
00:07:56,700 --> 00:07:58,800
‫و البته اگر دوباره به نقطه پایانی معتبر

134
00:07:58,800 --> 00:08:03,450
‫API برگردیم، پست‌های اسلش را دوباره

135
00:08:03,450 --> 00:08:05,850
‫ذخیره کنیم و دوباره بارگذاری کنیم،

136
00:08:05,850 --> 00:08:08,970
‫دوباره آن پست‌ها را دریافت کردیم و خطا برطرف شد.

137
00:08:08,970 --> 00:08:12,483
‫و همچنین هیچ خطایی در
‫اینجا در کنسول وجود ندارد.

